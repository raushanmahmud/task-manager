{"version":3,"sources":["api/response.js","api/client.js","features/todoList/todosSlice.js","utils/Pagination.js","features/modals/modalsSlice.js","features/auth/authSlice.js","features/todoList/TodoList.js","features/modals/index.js","features/modals/AddNewTodo.js","features/auth/Login.js","App.js","app/store.js","serviceWorker.js","index.js","utils/Pagination.module.css","features/modals/Modal.module.css"],"names":["handleResponse","response","results","data","handleError","error","BASE_URL","developer","client","resource","params","axios","get","then","catch","post","url","method","qs","stringify","headers","fetchTodos","createAsyncThunk","a","page","sort_field","sort_direction","addNewTodo","initialTodo","updateTodo","updatedTodo","id","token","text","status","todosSlice","createSlice","name","initialState","todos","totalCount","pagesCount","curPage","sortField","sortDirection","reducers","setCurPage","state","action","payload","setSortField","setSortDirection","extraReducers","pending","fulfilled","message","tasks","Number","total_task_count","Math","ceil","JSON","rejected","length","push","existingTodo","find","todo","actions","todoAdded","todoUpdated","selectAllTodos","selectCurPage","selectPagesCount","selectSortField","selectSortDirection","Pagination","props","items","lowLimit","floor","shownElemNum","highLimit","elemNumber","i","active","Item","onClick","changePage","disabled","showArrows","unshift","className","style","pagination","size","modalsSlice","showModal","type","hideModal","getModal","modals","currentUrl","user","isLoggedIn","Cookies","performLogin","username","password","authSlice","logout","remove","set","expires","selectIsLoggedIn","auth","selectToken","ascendingSortIcon","icon","faSortUp","descendingSortIcon","faSortDown","TodoList","dispatch","useDispatch","useSelector","todosStatus","useEffect","content","setSortFieldAndDirection","field","direction","hanleChangePage","loginButton","Button","logoutButton","Table","striped","responsive","ButtonGroup","maxHeight","marginTop","marginBottom","display","linkBtn","variant","verticalAlign","map","index","email","FormControl","as","value","label","hidden","editing","openEditForm","faPen","mainContainer","contentContainer","MODAL_COMPONENTS","useState","editingExistingTodo","setEditingExistingTodo","setId","setStatus","setUsername","setEmail","setText","alerts","setAlerts","done","setDone","validationErrors","setValidationErrors","canSave","every","Boolean","userNameChangeHandler","e","target","validEmailAddress","emailAddress","test","emailChangeHandler","textChangeHandler","getStatus","onSaveTodoClicked","validationErrorsObj","containsErrors","statusValue","form","FormData","append","setTimeout","resultAction","unwrapResult","msg","alertMsgs","console","modalWrapper","Dialog","width","Header","Title","Body","overflowY","alert","Alert","placeholder","onChange","paddingTop","errorMsg","htmlFor","Form","Check","marginLeft","defaultChecked","checked","Footer","setPassword","passwordChangeHandler","onLoginButtonClicked","Modals","modal","Modal","App","store","configureStore","reducer","authReducer","todosReducer","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7fc2888d.chunk.js","sourcesContent":["export function handleResponse(response) {\n    if (response.results) {\n        return response.results;\n    }\n\n    if (response.data) {\n        return response.data;\n    }\n\n    return response;\n}\n\nexport function handleError(error) {\n    if (error.data) {\n        return error.data;\n    }\n    return error;\n}","import axios from 'axios';\nimport qs from 'qs';\nimport { handleResponse, handleError } from './response';\n\nconst BASE_URL = 'https://uxcandy.com/~shapoval/test-task-backend/v2';\nconst developer = 'raushanmahmud';\n\nconst get = (resource, params) => {\n    return axios\n        .get(`${BASE_URL}${resource}?developer=${developer}`, {params})\n        .then(handleResponse)\n        .catch(handleError);\n};\n\nconst post = (resource, data) => {\n    return axios\n        .post(`${BASE_URL}${resource}?developer=${developer}`, data)\n        .then(handleResponse)\n        .catch(handleError);\n};\n\nconst encodedPost = (resource, data) => {\n    const url = `${BASE_URL}${resource}?developer=${developer}`\n    return axios({\n            method: 'post',\n            url,\n            data: qs.stringify(data),\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n            }\n        }).then(handleResponse)\n        .catch(handleError);\n};\n\nexport const client = {\n    get,\n    post,\n    encodedPost\n};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport {client} from '../../api/client'\n\nconst initialState = {\n  todos: [],\n  totalCount: 0,\n  pagesCount: 1,\n  curPage: 1,\n  status: 'idle',\n  error: null,\n  sortField: null,\n  sortDirection: null,\n}\n\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async ({page, sort_field, sort_direction}) => {\n  const response = await client.get('/', { page, sort_field, sort_direction})\n  return response\n})\n\nexport const addNewTodo = createAsyncThunk(\n    'todos/addNewTodo',\n    async initialTodo => {\n      const response = await client.post('/create', initialTodo)\n      return response\n    }\n)\n\nexport const updateTodo = createAsyncThunk(\n    'todos/updateTodo',\n    async updatedTodo => {\n      const response = await client.encodedPost(`/edit/${updatedTodo.id}`, {\n        token: updatedTodo.token,text: updatedTodo.text, status: (updatedTodo.status) ? (updatedTodo.status) : null\n      })\n      response.data = {};\n      response.data.id = updatedTodo.id;\n      response.data.text = updatedTodo.text;\n      response.data.status = updatedTodo.status;\n      return response\n    }\n)\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    setCurPage: (state, action) => {\n      state.curPage = action.payload;\n      state.status = 'idle'\n      state.error = ''\n    },\n    setSortField: (state, action) => {\n      state.sortField = action.payload;\n      state.status = 'idle'\n      state.error = ''\n    },\n    setSortDirection: (state, action) => {\n      state.sortDirection = action.payload;\n      state.status = 'idle'\n      state.error = ''\n    }\n  },\n  extraReducers: {\n    [fetchTodos.pending]: (state, action) => {\n      state.status = 'loading'\n    },\n    [fetchTodos.fulfilled]: (state, action) => {\n      if (action.payload.status !== 'error') {\n        state.status = 'succeeded'\n        state.todos = action.payload.message.tasks\n        state.totalCount = Number(action.payload.message.total_task_count)\n        state.pagesCount = Math.ceil(state.totalCount / 3)\n      } else {\n        state.status = 'failed'\n        state.error = JSON.stringify(action.payload.message)\n      }\n    },\n    [fetchTodos.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = JSON.stringify(action.error.message)\n    },\n    [addNewTodo.fulfilled]: (state, action) => {\n      if (action.payload.status!=='error'){\n        if (state.todos.length<3)\n          state.todos.push(action.payload.message)\n        state.totalCount = state.totalCount + 1\n        state.pagesCount = Math.ceil(state.totalCount / 3)\n        if (state.curPage!==state.pagesCount){\n          state.status = 'idle'\n          state.curPage = state.pagesCount\n        }\n\n      }\n    },\n    [updateTodo.fulfilled]: (state, action) => {\n      if (action.payload.status==='ok'){\n          const { id, text, status } = action.payload.data\n          const existingTodo = state.todos.find(todo => todo.id === id)\n          if (existingTodo) {\n            existingTodo.text = text\n            existingTodo.status = status\n          }\n\n      }\n    }\n  }\n})\n\nexport const { todoAdded, todoUpdated, setCurPage, setSortField, setSortDirection } = todosSlice.actions\n\nexport default todosSlice.reducer\n\nexport const selectAllTodos = state => state.todos.todos\nexport const selectTodosCount = state => state.todos.totalCount\nexport const selectCurPage = state => state.todos.curPage\nexport const selectPagesCount = state => state.todos.pagesCount\nexport const selectSortField = state => state.todos.sortField\nexport const selectSortDirection = state => state.todos.sortDirection\n","import React from \"react\";\nimport PaginationBS from \"react-bootstrap/Pagination\";\nimport style from \"./Pagination.module.css\";\n\nexport default function Pagination (props) {\n    const items = [];\n    let lowLimit = props.curPage - Math.floor(props.shownElemNum/2);\n    let highLimit = props.curPage + Math.floor(props.shownElemNum/2);\n    if (lowLimit <= 0) {\n        highLimit = props.shownElemNum;\n    } else if (highLimit >= props.elemNumber) {\n        lowLimit = props.elemNumber - props.shownElemNum + 1;\n    }\n    for (let i = 0; i < props.elemNumber; i++) {\n        let active = false;\n        if (i + 1 === props.curPage)\n            active = true;\n        if (props.shownElemNum < props.elemNumber) {\n            if (lowLimit <= i + 1 && i + 1 <= highLimit) {\n                items.push(\n                    <PaginationBS.Item key={items.length} active={active} onClick={() => props.changePage(i + 1)}>\n                        {i + 1}\n                    </PaginationBS.Item>);\n            } else if (i === 0) {\n                items.push(\n                    <PaginationBS.Item key={items.length} active={active} onClick={() => props.changePage(i + 1)}>\n                        {i + 1}\n                    </PaginationBS.Item>);\n            } else if (i + 1 === props.elemNumber) {\n                items.push(\n                    <PaginationBS.Item key={items.length} active={active} onClick={() => props.changePage(i + 1)}>\n                        {i + 1}\n                    </PaginationBS.Item>);\n            } else {\n                if (lowLimit - 1 === i + 1 || highLimit + 1 === i + 1)\n                    items.push(\n                        <PaginationBS.Item key={items.length} active={active} disabled>\n                            ...\n                        </PaginationBS.Item>);\n            }\n        } else {\n            items.push(\n                <PaginationBS.Item key={items.length} active={active} onClick={() => props.changePage(i + 1)}>\n                    {i + 1}\n                </PaginationBS.Item>);\n        }\n    }\n    if (props.showArrows) {\n        if (props.curPage !== 1)\n            items.unshift(\n                <PaginationBS.Item key={items.length} onClick={() => props.changePage(props.curPage - 1)}>\n                    &lt;\n                </PaginationBS.Item>)\n        if (props.curPage !== props.elemNumber && props.elemNumber !== 0)\n            items.push(\n                <PaginationBS.Item key={items.length} onClick={() => props.changePage(props.curPage + 1)}>\n                    &gt;\n                </PaginationBS.Item>)\n    }\n    return (\n        <PaginationBS className={`${style.pagination} justify-content-center`} size='sm'>\n            {items}\n        </PaginationBS>\n    )\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const modalsSlice = createSlice({\n    name: 'modals',\n    initialState: null,\n    reducers: {\n        showModal: (state, action) => {\n            let {type, props} = action.payload;\n            if (!props)\n                props = {};\n            return {type, props};\n        },\n        hideModal: () => {\n            return null;\n        },\n    }\n})\n\nexport default modalsSlice.reducer;\n\nexport const {showModal, hideModal} = modalsSlice.actions;\n\nexport const getModal = state => state.modals;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport {client} from '../../api/client'\nimport Cookies from 'js-cookie';\n\nconst initialState = {\n    currentUrl : '/',\n    user: null,\n    isLoggedIn: false,\n    token: (Cookies.get('token')) ? Cookies.get('token') : null\n}\n\nexport const performLogin = createAsyncThunk('auth/login', async ({username, password}) => {\n    const response = await client.encodedPost('/login', { username, password})\n    response.username = username\n    return response\n})\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        logout: (state, action) => {\n            state.isLoggedIn = false;\n            state.token = null\n            Cookies.remove('token')\n            state.user = null\n        }\n    },\n    extraReducers: {\n        [performLogin.fulfilled]: (state, action) => {\n            if (action.payload.status !== 'error') {\n                state.user = action.payload.user\n                const token =  action.payload.message.token\n                state.token = token\n                Cookies.set('token', token, { expires: 1 });\n                state.isLoggedIn = true\n            } else {\n                state.user = null\n                state.token = null\n                Cookies.remove('token')\n                state.isLoggedIn = false\n            }\n        },\n        [performLogin.rejected]: (state, action) => {\n            state.user = null\n            state.isLoggedIn = false\n            state.token = null\n            Cookies.remove('token')\n        }\n    }\n})\n\nexport const { logout } = authSlice.actions\n\nexport default authSlice.reducer\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn\nexport const selectUser = state => state.auth.user\nexport const selectToken = state => {\n    return Cookies.get('token')\n}\n","import React, {useEffect} from 'react';\nimport {Button, ButtonGroup, FormControl, Table} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    selectAllTodos,\n    fetchTodos,\n    selectCurPage,\n    selectPagesCount,\n    setCurPage,\n    selectSortField,\n    selectSortDirection, setSortField, setSortDirection\n} from \"./todosSlice\";\nimport Pagination from \"../../utils/Pagination\";\nimport style from \"../modals/Modal.module.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortUp, faSortDown, faPen} from '@fortawesome/free-solid-svg-icons'\nimport {showModal} from \"../modals/modalsSlice\";\nimport {logout, selectIsLoggedIn, selectToken} from \"../auth/authSlice\";\n\nconst ascendingSortIcon = <FontAwesomeIcon icon={faSortUp}/>;\nconst descendingSortIcon = <FontAwesomeIcon icon={faSortDown}/>;\n\n// See the screenshots; todo: persist token\nexport default function TodoList(props){\n    const dispatch = useDispatch()\n    const todos = useSelector(selectAllTodos)\n    const error = useSelector(state => state.todos.error)\n    const todosStatus = useSelector(state => state.todos.status)\n    const curPage = useSelector(selectCurPage);\n    const pagesCount = useSelector(selectPagesCount);\n    const sortField = useSelector(selectSortField);\n    const sortDirection = useSelector(selectSortDirection);\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const token = useSelector(selectToken);\n\n    useEffect(() => {\n        if (todosStatus === 'idle') {\n            dispatch(fetchTodos({page:curPage, sort_field:sortField, sort_direction:sortDirection}))\n        }\n    }, [todosStatus, dispatch, curPage, sortField, sortDirection, isLoggedIn])\n\n    const setSortFieldAndDirection = function(field, direction){\n        dispatch(setCurPage(1));\n        dispatch(setSortField(field));\n        dispatch(setSortDirection(direction))\n    }\n\n    const hanleChangePage = async(page)=>{\n        dispatch(setCurPage(page))\n    }\n\n    const openAddTodoModal = ()=>{\n        dispatch(showModal({type : 'ADD_TODO'}))\n    }\n\n    const openEditForm = ({id, username, text, email, status})=>{\n        dispatch(showModal({type : 'ADD_TODO', props: {\n                editing: true,\n                id, username, status, text, email\n            }}))\n    }\n\n    const openLoginForm = ()=>{\n        dispatch(showModal({type : 'LOGIN'}))\n    }\n\n    const loginButton = <Button onClick={openLoginForm}>\n        Авторизация\n    </Button>\n\n    const logoutButton = <Button onClick={()=>dispatch(logout())}>\n        Выйти\n    </Button>\n\n\n    let content;\n    if (todosStatus === 'loading') {\n        content = <div className=\"loader\">Загрузка...</div>\n    } else if (todosStatus === 'succeeded') {\n        content = <>\n            <Table striped responsive>\n                <thead>\n                <tr>\n                    <th>\n                        <span>#</span>\n                        <ButtonGroup style={{maxHeight:'100%', marginTop:'0px', marginBottom:'auto', display:'inline-grid'}}>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('id', 'asc')} variant='link' size='sm'>\n                                {ascendingSortIcon}\n                            </Button>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('id', 'desc')} variant='link' size='sm'>\n                                {descendingSortIcon}\n                            </Button>\n                        </ButtonGroup>\n\n                    </th>\n                    <th>\n                        <span>Имя пользователя</span>\n                        <ButtonGroup style={{maxHeight:'100%', marginTop:'0px', marginBottom:'auto', display:'inline-grid'}}>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('username', 'asc')} variant='link' size='sm'>\n                                {ascendingSortIcon}\n                            </Button>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('username', 'desc')} variant='link' size='sm'>\n                                {descendingSortIcon}\n                            </Button>\n                        </ButtonGroup>\n                    </th>\n                    <th>\n                        <span>email</span>\n                        <ButtonGroup style={{maxHeight:'100%', marginTop:'0px', marginBottom:'auto', display:'inline-grid'}}>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('email', 'asc')} variant='link' size='sm'>\n                                {ascendingSortIcon}\n                            </Button>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('email', 'desc')} variant='link' size='sm'>\n                                {descendingSortIcon}\n                            </Button>\n                        </ButtonGroup>\n                    </th>\n                    <th style={{verticalAlign:'middle'}}>\n                        <span>Текст задачи</span>\n                    </th>\n                    <th >\n                        <span>Статус</span>\n                        <ButtonGroup style={{maxHeight:'100%', marginTop:'0px', marginBottom:'auto', display:'inline-grid'}}>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('status', 'asc')} variant='link' size='sm'>\n                                {ascendingSortIcon}\n                            </Button>\n                            <Button className={style.linkBtn} onClick={()=>setSortFieldAndDirection('status', 'desc')} variant='link' size='sm'>\n                                {descendingSortIcon}\n                            </Button>\n                        </ButtonGroup>\n                    </th>\n                </tr>\n                </thead>\n                <tbody>\n                {todos && todos.map((todo, index)=>{\n                    return (\n                        <tr key={index}>\n                            <td>{todo.id}</td>\n                            <td>{todo.username}</td>\n                            <td>{todo.email}</td>\n                            <td>{todo.text}</td>\n                            <td>\n                                <FormControl as={'select'} disabled={true} value={todo.status}>\n                                    <option value={0} label={'не выполнено'}/>\n                                    <option value={1} label={'не выполнено, отредактировано администратором'}/>\n                                    <option value={10} label={'выполнено'}/>\n                                    <option value={11} label={'выполнено, отредактировано администратором'}/>\n                                </FormControl>\n                            </td>\n                            <td>\n                                <Button disabled={(!isLoggedIn && !token)}\n                                        hidden={(!isLoggedIn && !token)}\n                                        onClick={()=>openEditForm(todo)} >\n                                    <FontAwesomeIcon icon={faPen}/>\n                                </Button>\n\n                            </td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </Table>\n            <Pagination elemNumber={pagesCount}\n                        hidden={todosStatus==='loading'}\n                        curPage={curPage}\n                        shownElemNum={5}\n                        showArrows={true}\n                        changePage={hanleChangePage}/>\n        </>\n    } else if (todosStatus === 'failed') {\n        content = <tr><td>{error}</td></tr>\n    }\n\n\n    return (\n        <div className={style.mainContainer}>\n            <div className={style.contentContainer}>\n\n                <Button onClick={openAddTodoModal}>\n                    Добавить\n                </Button>\n                {(isLoggedIn || token) ? logoutButton : loginButton}\n\n                {content}\n\n            </div>\n        </div>\n\n\n\n    )\n}","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getModal} from \"./modalsSlice\";\nimport AddEditTodo from \"./AddNewTodo\";\nimport Login from \"../auth/Login\";\n\nconst MODAL_COMPONENTS = {\n    'ADD_TODO': AddEditTodo,\n    'LOGIN': Login\n}\n\nexport default function Modals () {\n    const modal = useSelector(getModal);\n    if (!modal)\n        return null;\n    const Modal = MODAL_COMPONENTS[modal.type];\n    return <Modal {...modal.props}/>\n}","import React, {useEffect, useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport style from './Modal.module.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport {addNewTodo, updateTodo} from '../todoList/todosSlice';\nimport {Alert, Button, FormControl, Form} from \"react-bootstrap\";\nimport {hideModal} from \"./modalsSlice\";\nimport {selectToken} from \"../auth/authSlice\";\n\nexport default function AddEditTodo(props) {\n    const dispatch = useDispatch();\n\n    const [editingExistingTodo, setEditingExistingTodo] = useState(false);\n    const [id, setId] = useState(null);\n    const [status, setStatus] = useState('');\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [text, setText] = useState('')\n    const [alerts, setAlerts] = useState([])\n    const [done, setDone] = useState(false)\n    const token = useSelector(selectToken);\n    const [validationErrors, setValidationErrors] = useState({\n        username: '',\n        email: '',\n        text: ''\n    });\n\n    useEffect(()=>{\n        if (props.editing)\n            setEditingExistingTodo(true);\n        else\n            setEditingExistingTodo(false);\n\n    }, [props.editing])\n\n    useEffect(()=>{\n        if (props.id) {\n            setId(props.id);\n            setText(props.text);\n            setUsername(props.username);\n            setEmail(props.email);\n            setDone((props.status >= 10) ? true : false);\n            setStatus(props.status);\n        }\n    }, [props.id])\n\n\n    const canSave =\n        [username, email, text].every(Boolean) && !validationErrors.username && !validationErrors.email && !validationErrors.text;\n\n    const userNameChangeHandler = async (e)=>{\n        const value = e.target.value;\n        setUsername(value);\n        if (!value)\n            setValidationErrors({...validationErrors, 'username': 'Поле является обязательным для заполнения'})\n        else\n            setValidationErrors({...validationErrors, 'username': ''})\n    }\n\n    const validEmailAddress = function(emailAddress){\n        if (/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/.test(emailAddress) ) {\n            return true;\n        } else {\n            if (emailAddress)\n                return false;\n            else\n                return true;\n        }\n    }\n\n    const emailChangeHandler = async (e)=>{\n        const value = e.target.value;\n        setEmail(value);\n        if (!value)\n            setValidationErrors({...validationErrors, 'email': 'Поле является обязательным для заполнения'})\n        else {\n            if (validEmailAddress(value)){\n                setValidationErrors({...validationErrors, 'email': ''})\n            } else {\n                setValidationErrors({...validationErrors, 'email': 'Неверный формат email'})\n            }\n        }\n\n    }\n\n    const textChangeHandler = async (e)=>{\n        const value = e.target.value;\n        setText(value);\n        if (!value)\n            setValidationErrors({...validationErrors, 'text': 'Поле является обязательным для заполнения'})\n        else\n            setValidationErrors({...validationErrors, 'text': ''})\n    }\n\n    const handleDoneChange = (e)=>{\n        setDone(e.target.checked);\n    }\n\n    const getStatus = (status, done, text)=>{\n        let newStatus;\n        if (!done) {\n            if (props.text!==text || props.status===1 || props.status===11)\n                newStatus = 1;\n            else\n                newStatus = 0;\n        } else {\n            if (props.text!==text || props.status===1 || props.status===11)\n                newStatus = 11;\n            else\n                newStatus = 10;\n        }\n        return newStatus\n    }\n\n    const onSaveTodoClicked = async () => {\n        let validationErrorsObj ={};\n        let containsErrors = false;\n        if (!username) {\n            containsErrors = true;\n            validationErrorsObj = { 'username': 'Поле является обязательным для заполнения'};\n        }\n        if (!email) {\n            containsErrors = true;\n            validationErrorsObj = { ...validationErrorsObj, 'email': 'Поле является обязательным для заполнения'};\n        } else if (!validEmailAddress(email)){\n            containsErrors = true;\n            validationErrorsObj = { ...validationErrorsObj, 'email': 'Неверный формат email'};\n        }\n        if (!text) {\n            containsErrors = true;\n            validationErrorsObj = { ...validationErrorsObj, 'text': 'Поле является обязательным для заполнения'};\n        }\n        setValidationErrors(validationErrorsObj);\n        if (canSave && !containsErrors) {\n            try {\n                if (!editingExistingTodo) {\n                    const statusValue = (done) ? 10 : 0;\n                    var form = new FormData();\n                    form.append(\"username\", username);\n                    form.append(\"email\", email);\n                    form.append(\"text\", text);\n                    form.append(\"status\", statusValue);\n                    await dispatch(\n                        addNewTodo(form)\n                    );\n\n                    setAlerts([{variant: 'success', text: 'Задача успешно добавлена'}])\n                    setTimeout(async function () {\n                        setUsername('')\n                        setEmail('')\n                        setText('')\n                        dispatch(hideModal())\n                    }, 1000);\n                } else {\n                    const resultAction = await dispatch(updateTodo({\n                        id,\n                        token,\n                        text,\n                        status: getStatus(status, done, text)\n                    }));\n                    const response = unwrapResult(resultAction);\n                    if (response.status==='ok') {\n                        setAlerts([{variant: 'success', text: 'Задача успешно обновлена'}])\n                        setTimeout(async function () {\n                            dispatch(hideModal())\n                        }, 1000);\n                    } else {\n                        const alertMsgs = [];\n                        for (const msg in response.message){\n                            alertMsgs.push({variant: 'danger', text: msg + ':' +response.message[msg]});\n                        }\n                        if (response.message.token){\n                            alertMsgs.push({variant: 'danger', text: 'Ошибка авторизации, пожалуйста попробуйте переавторизоваться'})\n                        }\n                        setAlerts(alertMsgs)\n                    }\n                }\n            } catch (err) {\n                console.error('Failed to save the todo: ', err)\n            }\n        }\n    }\n\n    return (\n        <div className={style.modalWrapper}>\n            <Modal.Dialog\n                size='lg'\n                style={{width: '100%'}}>\n                <Modal.Header>\n                    <Modal.Title> {(editingExistingTodo) ? 'Редактировать' : 'Добавить '} задачу</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    {alerts.map((alert, index) => {\n                        return (\n                            <Alert key={index} variant={alert.variant}>\n                                {alert.text}\n                            </Alert>\n                        )\n                    })}\n\n                    <label>Имя пользователя</label>\n                    <FormControl placeholder='Имя пользователя'\n                                 disabled={editingExistingTodo}\n                                 value={username}\n                                 onChange={userNameChangeHandler}\n                                 className={`mb-2 ${(validationErrors['username']) ? style.error : ''}`}\n                                 style={{paddingTop: '10px'}}/>\n                    {(validationErrors['username']) ? <small className={style.errorMsg}>{validationErrors['username']}</small> : null}\n\n\n                    <label>Email адрес</label>\n                    <FormControl placeholder='email адрес'\n                                 disabled={editingExistingTodo}\n                                 value={email}\n                                 onChange={emailChangeHandler}\n                                 className={`mb-2 ${(validationErrors['email']) ? style.error : ''}`}\n                                 style={{paddingTop: '10px'}}/>\n                    {(validationErrors['email']) ? <small className={style.errorMsg}>{validationErrors['email']}</small> : null}\n\n                    <label>Текст</label>\n                    <FormControl placeholder='Текст'\n                                 value={text}\n                                 onChange={textChangeHandler}\n                                 className={`mb-2 ${(validationErrors['text']) ? style.error : ''}`}\n                                 style={{paddingTop: '10px'}}/>\n                    {(validationErrors['text']) ? <small className={style.errorMsg}>{validationErrors['text']}</small> : null}\n\n                    <div hidden={!editingExistingTodo} style={{display: \"box\", marginTop: \"1rem\", marginBottom: \"1rem\"}}>\n                        <label htmlFor='show-com'>Выполнено </label>\n                        <Form.Check style={{marginLeft: '10px'}}\n                               defaultChecked={props.status>=10 ? true : false}\n                               value={done}\n                               type='checkbox'\n                               onChange={handleDoneChange}/>\n                    </div>\n\n                    <Modal.Footer>\n                        <Button variant='secondary' onClick={() => dispatch(hideModal())}>Отмена</Button>\n                        <Button variant='primary' onClick={onSaveTodoClicked}>\n                            Сохранить\n                        </Button>\n                    </Modal.Footer>\n                </Modal.Body>\n            </Modal.Dialog>\n        </div>\n    );\n}","import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport style from '../modals/Modal.module.css';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Alert, Button, FormControl} from \"react-bootstrap\";\nimport {hideModal} from \"../modals/modalsSlice\";\nimport {performLogin} from \"./authSlice\";\nimport {unwrapResult} from \"@reduxjs/toolkit\";\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [alerts, setAlerts] = useState([]);\n\n    const [validationErrors, setValidationErrors] = useState({\n        username: '',\n        password: ''\n    });\n\n\n    const canSave =\n        [username, password].every(Boolean) && !validationErrors.username && !validationErrors.email && !validationErrors.text;\n\n    const userNameChangeHandler = async (e)=>{\n        const value = e.target.value;\n        setUsername(value);\n        if (!value)\n            setValidationErrors({...validationErrors, 'username': 'Поле является обязательным для заполнения'})\n        else\n            setValidationErrors({...validationErrors, 'username': ''})\n    }\n\n    const passwordChangeHandler = async (e)=>{\n        const value = e.target.value;\n        setPassword(value);\n        if (!value)\n            setValidationErrors({...validationErrors, 'password': 'Поле является обязательным для заполнения'})\n        else\n            setValidationErrors({...validationErrors, 'password': ''})\n    }\n\n\n    const onLoginButtonClicked = async () => {\n\n        let validationErrorsObj ={};\n        let containsErrors = false;\n        if (!username) {\n            containsErrors = true;\n            validationErrorsObj = { 'username': 'Поле является обязательным для заполнения'};\n        }\n        if (!password) {\n            containsErrors = true;\n            validationErrorsObj = { ...validationErrorsObj, 'password': 'Поле является обязательным для заполнения'};\n        }\n        setValidationErrors(validationErrorsObj);\n        if (canSave && !containsErrors) {\n            try {\n                    const resultAction = await dispatch(performLogin({\n                        username,\n                        password\n                    }));\n                    const response = unwrapResult(resultAction);\n                    if (response.status===\"ok\") {\n                        setAlerts([{variant: 'success', text: 'Авторизация прошла успешно'}])\n                        setTimeout(async function () {\n                            dispatch(hideModal())\n                        }, 500);\n                    } else {\n                        setAlerts([{variant: 'danger', text: 'Ошибка авторизации'}])\n                    }\n\n            } catch (err) {\n                console.error('Failed to login: ', err);\n                setAlerts([{variant: 'danger', text: 'Ошибка авторизации'}])\n            }\n        }\n    }\n\n    return (\n        <div className={style.modalWrapper}>\n            <Modal.Dialog\n                size='lg'\n                style={{width: '100%'}}>\n                <Modal.Header>\n                    <Modal.Title> Авторизация </Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    {alerts.map((alert, index) => {\n                        return (\n                            <Alert key={index} variant={alert.variant}>\n                                {alert.text}\n                            </Alert>\n                        )\n                    })}\n\n                    <label>Имя пользователя</label>\n                    <FormControl placeholder='Имя пользователя'\n                                 value={username}\n                                 onChange={userNameChangeHandler}\n                                 className={`mb-2 ${(validationErrors['username']) ? style.error : ''}`}\n                                 style={{paddingTop: '10px'}}/>\n                    {(validationErrors['username']) ? <small className={style.errorMsg}>{validationErrors['username']}</small> : null}\n\n\n                    <label>Пароль</label>\n                    <FormControl placeholder='Пароль'\n                                 value={password}\n                                 onChange={passwordChangeHandler}\n                                 className={`mb-2 ${(validationErrors['password']) ? style.error : ''}`}\n                                 style={{paddingTop: '10px'}}/>\n                    {(validationErrors['password']) ? <small className={style.errorMsg}>{validationErrors['password']}</small> : null}\n\n\n                    <Modal.Footer>\n                        <Button variant='secondary' onClick={() => dispatch(hideModal())}>Отмена</Button>\n                        <Button variant='primary' onClick={onLoginButtonClicked}>\n                            Войти\n                        </Button>\n                    </Modal.Footer>\n                </Modal.Body>\n            </Modal.Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from \"./features/todoList/TodoList\";\nimport Modals from \"./features/modals\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Modals/>\n          <TodoList />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todoList/todosSlice';\nimport modals from '../features/modals/modalsSlice';\nimport authReducer from '../features/auth/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    todos: todosReducer,\n    modals\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2JrlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__1PESq\",\"mainContainer\":\"Modal_mainContainer__3yfz7\",\"contentContainer\":\"Modal_contentContainer__H3J4N\",\"errorMsg\":\"Modal_errorMsg__38cZi\",\"error\":\"Modal_error__1xlRp\",\"linkBtn\":\"Modal_linkBtn__1R743\"};"],"sourceRoot":""}